import asyncio
from sqlalchemy.ext.asyncio import create_async_engine
from sqlalchemy import text
from core.config import DATABASE_URL


engine = create_async_engine(DATABASE_URL, echo=True)


async def test_connection():
    print("üöÄ –ó–∞–ø—É—Å–∫ test_connection()")
    try:
        async with engine.connect() as conn:
            print("üîó –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π")
            result = await conn.execute(text("SELECT 1"))
            print(result.fetchall())
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:", e)


if __name__ == "__main__":
    asyncio.run(test_connection())
